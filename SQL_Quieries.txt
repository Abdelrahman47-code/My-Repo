SELECT ac.name,ac.primary_poc,ac.long,web.channel
FROM web_events AS web
JOIN accounts AS ac
ON ac.name like 'Walmart';


SELECT r.name regionName, s.name sales_repName, ac.name accountsName
FROM region AS r
JOIN sales_reps AS s
ON r.id = s.region_id
JOIN accounts AS ac
ON ac.sales_rep_id = s.id
ORDER BY ac.name DESC;


SELECT s.name regionName, (o.total_amt_usd/((o.total)+0.01)) unitPrice, ac.name accountName
FROM accounts AS ac
JOIN orders AS o
ON o.account_id = ac.id
JOIN sales_reps AS s
ON ac.sales_rep_id = s.id;

SELECT r.name region, a.name account, o.total_amt_usd/(o.total + 0.01) unit_price
FROM region r
JOIN sales_reps s
ON s.region_id = r.id
JOIN accounts a
ON a.sales_rep_id = s.id
JOIN orders o
ON o.account_id = a.id;

Quiz2
1) Select r.name region, s.name sales_rep, ac.name account
From region r
Join sales_reps s
On r.id = s.region_id
Join accounts ac
On r.id = s.region_id
Where r.name = 'Midwest'
Order By ac.name Desc;

2) Select r.name region, s.name sales_rep, ac.name account
From region r
Join sales_reps s
On r.id = s.region_id
Join accounts ac
On r.id = s.region_id
Where r.name = 'Midwest'
And s.name like 'S%'
Order By ac.name Desc;

3) Select r.name region, s.name sales_rep, ac.name account
From region r
Join sales_reps s
On r.id = s.region_id
Join accounts ac
On r.id = s.region_id
Where r.name = 'Midwest'
And s.name like '% K%'
Order By ac.name Desc;

4) 

5) Select r.name region, ac.name account, (od.total_amt_usd/(od.total+0.01)) unitPrice
From region r 
Join sales_reps s
On r.id = s.region_id
Join accounts ac
On ac.sales_rep_id = s.id
Join orders od
On od.account_id = ac.id
Where od.standard_qty>100
And od.poster_qty>50
Order By od.poster_qty Desc;

7) Select Distinct w.channel channel, ac.name account
From accounts ac
Join web_events w
On ac.id = w.account_id
Where ac.id = 1001;

8) Select *
From orders od
Join accounts ac
On od.account_id = ac.id
Join web_events we
On we.account_id = ac.id
Where we.occurred_at Between '2015-01-01' And '2016-01-01';


Quiz3
1) Select ac.name, od.occurred_at
From orders od
Join accounts ac
On ac.id = od.account_id
Group By ac.name, od.occurred_at
Order by od.occurred_at
limit 1;

2) Select ac.name, (od.total_amt_usd+od.standard_amt_usd+od.gloss_amt_usd+od.poster_amt_usd)
From orders od
Join accounts ac
On ac.id = od.account_id
Join sales_reps s
On s.id = ac.sales_rep_id;

3) Select ac.name, we.occurred_at Date, we.channel Channel
From web_events we
Join accounts ac
On ac.id = we.account_id
Order By we.occurred_at Desc
Limit 1;

4) Select ac.primary_poc, we.occurred_at Date
From web_events we
Join accounts ac
On ac.id = we.account_id
Order By we.occurred_at Desc
Limit 1;

5) Select ac.name account, od.total_amt_usd Total
From orders od
Join accounts ac
On ac.id = od.account_id
Order By od.total_amt_usd
Limit 1;

6) Select r.name, count(*) Total
From region r
Join sales_reps s
On r.id = s.region_id
Group by r.name
Limit 1;

Quiz3

1) Select ac.name account,
		round(Avg(o.standard_qty),2) avg_standard,
        round(Avg(o.gloss_qty),2) avg_gloss,
        round(Avg(o.poster_qty),2) avg_poster
From orders o
Join accounts ac
On o.account_id = ac.id
Group by ac.name
Order by ac.name;

3) Select s.name Sales_rep, w.channel channel, count(*) Occurances
From sales_reps s
Join accounts ac
On ac.sales_rep_id = s.id
Join web_events w
On ac.id = w.account_id
Group by s.name, w.channel
Order by occurances desc;

4) Select r.name region, w.channel channel, count(*) Occurances
From sales_reps s
Join accounts ac
On ac.sales_rep_id = s.id
Join web_events w
On ac.id = w.account_id
Join region r
On r.id = s.region_id
Group by r.name, w.channel
Order by region desc, occurances desc;

5) Select Distinct r.name region, ac.name account, s.id
From region r
Join sales_reps s
On s.region_id = r.id
Join accounts ac
On ac.sales_rep_id = s.id
Group by r.name, ac.name,s.id;

############

1) Select s.name "Sales Rep", count(*) "Number of accounts"
From sales_reps s
Join accounts ac
On ac.sales_rep_id = s.id
Group by s.name
Having count(ac.name) > 5
Order by s.name Desc;

2) Select ac.name Account, count(*) "Number of orders"
From accounts ac
Join orders o
On o.account_id = ac.id
Group by ac.name
Having count(ac.name) > 20;

3) Select ac.name Account, count(*) orders
From accounts ac
Join orders o
On o.account_id = ac.id
Group by ac.name
Order by orders desc
limit 1;

4) Select ac.name Account, count(*) orders
From accounts ac
Join orders o
On o.account_id = ac.id
Group by ac.name
Having sum(total_amt_usd+poster_amt_usd+gloss_amt_usd+standard_amt_usd)>30000;

5) Select ac.name Account, sum(o.total) total
From accounts ac
Join orders o
On o.account_id = ac.id
Group by ac.name
Order by total Desc
Limit 1;

6) Select ac.name Account, w.channel channel
From accounts ac
Join web_events w
On w.account_id = ac.id
Group by ac.name, w.channel
Having w.channel = 'facebook' and count(w.channel)>6
Order by count(*) Desc;

7) Select ac.name Account, w.channel channel
From accounts ac
Join web_events w
On w.account_id = ac.id
Group by ac.name, w.channel
Order by count(*) Desc;

########

Select ac.name Account, w.channel channel
From accounts ac
Join web_events w
On w.account_id = ac.id
Group by ac.name, w.channel
Order by count(*) Desc
Limit 1;

######
SELECT DATE_TRUNC('month', o.occurred_at) ord_date, SUM(o.gloss_amt_usd) tot_spent
FROM orders o 
JOIN accounts a
ON a.id = o.account_id
WHERE a.name = 'Walmart'
GROUP BY 1
ORDER BY 2 DESC
LIMIT 1;

SELECT account_id,
       occurred_at,
       total,
       CASE WHEN total > 500 THEN 'Over 500'
            WHEN total > 300 AND total <= 500 THEN '301 - 500'
            WHEN total > 100 AND total <=300 THEN '101 - 300'
            ELSE '100 or under' END AS total_group
FROM orders

######

With table1 As (Select s.name sal, r.name reg, sum(total_amt_usd) total
                From orders o
                Join accounts ac
                On ac.id = o.account_id
                Join sales_reps s
                On s.id = ac.sales_rep_id
                Join region r
                On r.id = s.region_id
                Group by 1,2
                Order by 3 Desc)
Select sal, max(total)
From table1
Group by 1


Select count(*)
From orders
Having Sum(standard_qty) > 
(With table1 AS (Select ac.name account, o.id, sum(o.standard_qty) std
      From accounts ac
      Join orders o
      On ac.id = o.account_id
      Group by 1,2
      Order by 3)
Select max(std)
From table1)

####
####

Select BillingCountry, count(invoiceid) Invoices
From Invoice
Group by 1
Order by 2 desc;

#####

Select BillingCity, sum(total) Total
From Invoice
Group by 1
Order by 2 desc;
#####

SELECT i.CustomerId, sum(i.total) Total
From Invoice i
Join Customer c
On i.CustomerId = c.CustomerId
GROUP by 1
ORDER by 2 DESC;
####

SELECT c.Email, c.FirstName, c.LastName, g.Name
From Track t
Join InvoiceLine in1
On in1.InvoiceId = t.TrackId
JOIN Invoice in2
On in2.InvoiceId = in1.InvoiceId
Join Customer c
On in2.CustomerId = c.CustomerId
Join Genre g
On t.GenreId = g.GenreId And g.Name = 'Rock'
GROUP by 1
order by 1;
####

Select ar.ArtistId, ar.Name, count(*)
From Artist ar
Join Album al
On ar.ArtistId = al.ArtistId
JOIN track t
On al.AlbumId = t.AlbumId
Join Genre g
On g.GenreId = t.GenreId
WHERE g.Name = 'Rock'
GROUP by 1
order by 3 DESC
LIMIT 10;
#####

Select count(ar.artistid)*in1.UnitPrice AmountSpent,ar.name
From Artist ar
Join Album al
ON al.ArtistId = ar.ArtistId
Join track t
On t.AlbumId = al.AlbumId
Join InvoiceLine in1
On in1.TrackId = t.TrackId
Join Invoice in2
On in1.InvoiceId = in2.InvoiceId
JOIN Customer c
On c.CustomerId = in2.CustomerId
GROUP by 2
order by 1 DESC;
####

Select ar.name, count(c.CustomerId)*in1.UnitPrice AmountSpent, c.FirstName,c.LastName,c.CustomerId
From Artist ar
Join Album al
ON al.ArtistId = ar.ArtistId
Join track t
On t.AlbumId = al.AlbumId
Join InvoiceLine in1
On in1.TrackId = t.TrackId
Join Invoice in2
On in1.InvoiceId = in2.InvoiceId
JOIN Customer c
On c.CustomerId = in2.CustomerId
WHERE ar.Name = "Iron Maiden"
Group by 5
order by 1 DESC;
####

Select *
From Genre g
Join Track t
On g.GenreId = t.GenreId
join InvoiceLine in1
On in1.TrackId = in1.InvoiceId
Join Invoice in2
On in1.InvoiceId = in2.InvoiceId
Join Customer c
On in2.CustomerId = c.CustomerId



####
Select Name, Milliseconds
FROM Track
GROUP by 1
HAVING Milliseconds > (Select Avg(Milliseconds)From Track)
order by 2 DESC

#######

Select c.country, in2.total, c.FirstName, c.LastName, c.CustomerId
From Artist ar
Join Album al
ON al.ArtistId = ar.ArtistId
Join track t
On t.AlbumId = al.AlbumId
Join InvoiceLine in1
On in1.TrackId = t.TrackId
Join Invoice in2
On in1.InvoiceId = in2.InvoiceId
JOIN Customer c
On c.CustomerId = in2.CustomerId
GROUP by 1,5
ORDER by 2 DESC


Select DISTINCT c.country, sum(in2.total), c.CustomerId, c.FirstName, c.LastName
From Customer c
Join Invoice in2
On in2.CustomerId = c.CustomerId
Group by 1,3
order by 2 desc;
